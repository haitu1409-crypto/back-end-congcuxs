/**
 * Test Article API - Script ƒë·ªÉ test API ƒëƒÉng b√†i
 */

const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

const API_URL = 'http://localhost:5000/api/articles';

// Test data
const testArticle = {
    title: 'Test B√†i Vi·∫øt - Gi·∫£i M√£ Gi·∫•c M∆° Th·∫•y Tr√¢u',
    excerpt: 'B√†i vi·∫øt test v·ªÅ gi·∫£i m√£ gi·∫•c m∆° th·∫•y tr√¢u v√† √Ω nghƒ©a trong x·ªï s·ªë',
    content: `
        <h2>Gi·∫£i M√£ Gi·∫•c M∆° Th·∫•y Tr√¢u</h2>
        <p>Tr√¢u l√† m·ªôt trong nh·ªØng con v·∫≠t may m·∫Øn trong vƒÉn h√≥a Vi·ªát Nam. Khi b·∫°n m∆° th·∫•y tr√¢u, ƒë√¢y c√≥ th·ªÉ l√† ƒëi·ªÅm b√°o t·ªët l√†nh.</p>
        
        <h3>√ù Nghƒ©a Gi·∫•c M∆° Th·∫•y Tr√¢u</h3>
        <ul>
            <li>Tr√¢u ƒëen: ƒêi·ªÅm b√°o v·ªÅ s·ª± ·ªïn ƒë·ªãnh v√† b·ªÅn v·ªØng</li>
            <li>Tr√¢u tr·∫Øng: May m·∫Øn v√† th√†nh c√¥ng trong c√¥ng vi·ªác</li>
            <li>Tr√¢u v√†ng: T√†i l·ªôc v√† th·ªãnh v∆∞·ª£ng</li>
        </ul>
        
        <h3>S·ªë May M·∫Øn T·ª´ Gi·∫•c M∆° Tr√¢u</h3>
        <p>D·ª±a tr√™n kinh nghi·ªám c·ªßa c√°c cao th·ªß, nh·ªØng con s·ªë may m·∫Øn khi m∆° th·∫•y tr√¢u th∆∞·ªùng l√†:</p>
        <ul>
            <li>Tr√¢u ƒëen: 12, 21, 32, 43</li>
            <li>Tr√¢u tr·∫Øng: 01, 10, 19, 28</li>
            <li>Tr√¢u v√†ng: 06, 15, 24, 33</li>
        </ul>
    `,
    category: 'giai-ma-giac-mo',
    tags: 'gi·∫£i m√£ gi·∫•c m∆°, tr√¢u, s·ªë may m·∫Øn, x·ªï s·ªë',
    keywords: 'gi·∫£i m√£ gi·∫•c m∆° th·∫•y tr√¢u, s·ªë may m·∫Øn tr√¢u, m∆° th·∫•y tr√¢u ƒë√°nh con g√¨',
    metaDescription: 'Gi·∫£i m√£ gi·∫•c m∆° th·∫•y tr√¢u v√† nh·ªØng con s·ªë may m·∫Øn trong x·ªï s·ªë. Kinh nghi·ªám t·ª´ c√°c cao th·ªß v·ªÅ √Ω nghƒ©a gi·∫•c m∆° tr√¢u.',
    author: 'Admin',
    isFeatured: 'true',
    isTrending: 'false',
    password: '141920'
};

async function testCreateArticle() {
    try {
        console.log('üöÄ B·∫Øt ƒë·∫ßu test t·∫°o b√†i vi·∫øt...');
        
        // Create form data
        const formData = new FormData();
        
        // Add all form fields
        Object.keys(testArticle).forEach(key => {
            formData.append(key, testArticle[key]);
        });
        
        // Add a test image (if exists)
        const testImagePath = path.join(__dirname, 'test-image.jpg');
        if (fs.existsSync(testImagePath)) {
            formData.append('featuredImage', fs.createReadStream(testImagePath));
            console.log('üì∑ ƒê√£ th√™m ·∫£nh test');
        } else {
            console.log('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ·∫£nh test, s·∫Ω t·∫°o b√†i vi·∫øt kh√¥ng c√≥ ·∫£nh');
        }
        
        // Make request
        const response = await fetch(`${API_URL}/create`, {
            method: 'POST',
            body: formData,
            headers: {
                ...formData.getHeaders()
            }
        });
        
        const result = await response.json();
        
        if (result.success) {
            console.log('‚úÖ T·∫°o b√†i vi·∫øt th√†nh c√¥ng!');
            console.log('üìÑ Slug:', result.data.slug);
            console.log('üîó URL:', `http://localhost:3000/tin-tuc/${result.data.slug}`);
        } else {
            console.log('‚ùå L·ªói t·∫°o b√†i vi·∫øt:', result.message);
            if (result.error) {
                console.log('üîç Chi ti·∫øt l·ªói:', result.error);
            }
        }
        
    } catch (error) {
        console.error('‚ùå L·ªói khi test API:', error.message);
    }
}

async function testGetArticles() {
    try {
        console.log('\nüì∞ Test l·∫•y danh s√°ch b√†i vi·∫øt...');
        
        const response = await fetch(`${API_URL}?page=1&limit=5`);
        const result = await response.json();
        
        if (result.success) {
            console.log('‚úÖ L·∫•y danh s√°ch b√†i vi·∫øt th√†nh c√¥ng!');
            console.log('üìä T·ªïng s·ªë b√†i vi·∫øt:', result.data.pagination.totalArticles);
            console.log('üìÑ S·ªë b√†i vi·∫øt trong trang:', result.data.articles.length);
            
            if (result.data.articles.length > 0) {
                console.log('üìù B√†i vi·∫øt ƒë·∫ßu ti√™n:', result.data.articles[0].title);
            }
        } else {
            console.log('‚ùå L·ªói l·∫•y danh s√°ch b√†i vi·∫øt:', result.message);
        }
        
    } catch (error) {
        console.error('‚ùå L·ªói khi test API:', error.message);
    }
}

async function testGetCategories() {
    try {
        console.log('\nüè∑Ô∏è Test l·∫•y danh m·ª•c...');
        
        const response = await fetch(`${API_URL}/categories`);
        const result = await response.json();
        
        if (result.success) {
            console.log('‚úÖ L·∫•y danh m·ª•c th√†nh c√¥ng!');
            console.log('üìä S·ªë danh m·ª•c:', result.data.length);
            result.data.forEach(category => {
                console.log(`  - ${category.label}: ${category.count} b√†i vi·∫øt`);
            });
        } else {
            console.log('‚ùå L·ªói l·∫•y danh m·ª•c:', result.message);
        }
        
    } catch (error) {
        console.error('‚ùå L·ªói khi test API:', error.message);
    }
}

// Run tests
async function runTests() {
    console.log('üß™ B·∫Øt ƒë·∫ßu test Article API...\n');
    
    await testCreateArticle();
    await testGetArticles();
    await testGetCategories();
    
    console.log('\n‚úÖ Ho√†n th√†nh test!');
}

// Check if running directly
if (require.main === module) {
    runTests();
}

module.exports = {
    testCreateArticle,
    testGetArticles,
    testGetCategories
};
